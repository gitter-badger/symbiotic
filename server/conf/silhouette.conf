silhouette {

  # JWT authenticator settings
  authenticator.headerName = "X-Auth-Token"
  authenticator.issuerClaim = "symbiotic"
  authenticator.encryptSubject = true
  authenticator.authenticatorExpiry = 12 hours
  authenticator.sharedSecret= "changeme"

  authenticator.authenticatorExpiry=30 days
  authenticator.authenticatorIdleTimeout=5 days

  authenticator.cookie.signer {
    # A unique encryption key
    key = "[changeme]"
    # Constant prepended and appended to the data before signing. When using one
    # key for multiple purposes, using a specific pepper reduces some risks
    # arising from this.
    pepper = "-mohiva-silhouette-cookie-signer-"
  }
  authenticator.crypter.key = "[changeme]" # A unique encryption key

  # OAuth1 token secret provider settings
//  oauth1TokenSecretProvider.cookieName="OAuth1TokenSecret"
//  oauth1TokenSecretProvider.cookiePath="/"
//  oauth1TokenSecretProvider.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
//  oauth1TokenSecretProvider.httpOnlyCookie=true
//  oauth1TokenSecretProvider.expirationTime=5 minutes

  # OAuth2 state provider settings
  oauth2StateProvider.cookieName="OAuth2State"
  oauth2StateProvider.cookiePath="/"
  oauth2StateProvider.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth2StateProvider.httpOnlyCookie=true
  oauth2StateProvider.expirationTime=5 minutes
  oauth2StateProvider.cookie.signer {
    # A unique encryption key
    key = "[changeme]"
    # Constant prepended and appended to the data before signing. When using one
    # key for multiple purposes, using a specific pepper reduces some risks
    # arising from this.
    pepper = "-mohiva-silhouette-cookie-signer-"
  }

  # Facebook provider
//  facebook.authorizationURL="https://graph.facebook.com/v2.3/oauth/authorize"
//  facebook.accessTokenURL="https://graph.facebook.com/v2.3/oauth/access_token"
//  facebook.redirectURL="http://localhost:9000/authenticate/facebook"
//  facebook.clientID=""
//  facebook.clientID=${?FACEBOOK_CLIENT_ID}
//  facebook.clientSecret=""
//  facebook.clientSecret=${?FACEBOOK_CLIENT_SECRET}
//  facebook.scope="email"

  # Google provider
  google.authorizationURL="https://accounts.google.com/o/oauth2/auth"
  google.accessTokenURL="https://accounts.google.com/o/oauth2/token"
  # The following is true for the redirectURL's:
  // use with the scala-js client and a correctly configured nginx.conf
  google.redirectURL="http://dev.scalytica.net/symbiotic/authCallback/google"
  // use when testing the server only functionality
  //google.redirectURL="http://dev.scalytica.net/symbiotic-server/authenticate/google"
  google.clientID=""
  google.clientID=${?GOOGLE_CLIENT_ID}
  google.clientSecret=""
  google.clientSecret=${?GOOGLE_CLIENT_SECRET}
  google.scope="profile email"

  # Github provider
  github.authorizationURL="https://github.com/login/oauth/authorize"
  github.accessTokenURL="https://github.com/login/oauth/access_token"
  github.redirectURL="http://dev.scalytica.net/symbiotic/authCallback/github"
  github.clientID=""
  github.clientID=${?GITHUB_CLIENT_ID}
  github.clientSecret=""
  github.clientSecret=${?GITHUB_CLIENT_SECRET}
  github.scope="user:email"
  github.emailsURL="https://api.github.com/user/emails?access_token=%s"

  # VK provider
//  vk.authorizationURL="http://oauth.vk.com/authorize"
//  vk.accessTokenURL="https://oauth.vk.com/access_token"
//  vk.redirectURL="http://localhost:9000/authenticate/vk"
//  vk.clientID=""
//  vk.clientID=${?VK_CLIENT_ID}
//  vk.clientSecret=""
//  vk.clientSecret=${?VK_CLIENT_SECRET}
//  vk.scope="email"

  # Clef provider
//  clef.accessTokenURL="https://clef.io/api/v1/authorize"
//  clef.redirectURL="http://localhost:9000/authenticate/clef"
//  clef.clientID=""
//  clef.clientID=${?CLEF_CLIENT_ID}
//  clef.clientSecret=""
//  clef.clientSecret=${?CLEF_CLIENT_SECRET}

  # Twitter provider
//  twitter.requestTokenURL="https://twitter.com/oauth/request_token"
//  twitter.accessTokenURL="https://twitter.com/oauth/access_token"
//  twitter.authorizationURL="https://twitter.com/oauth/authenticate"
//  twitter.callbackURL="http://localhost:9000/authenticate/twitter"
//  twitter.consumerKey=""
//  twitter.consumerKey=${?TWITTER_CONSUMER_KEY}
//  twitter.consumerSecret=""
//  twitter.consumerSecret=${?TWITTER_CONSUMER_SECRET}

  # Xing provider
//  xing.requestTokenURL="https://api.xing.com/v1/request_token"
//  xing.accessTokenURL="https://api.xing.com/v1/access_token"
//  xing.authorizationURL="https://api.xing.com/v1/authorize"
//  xing.callbackURL="http://localhost:9000/authenticate/xing"
//  xing.consumerKey=""
//  xing.consumerKey=${?XING_CONSUMER_KEY}
//  xing.consumerSecret=""
//  xing.consumerSecret=${?XING_CONSUMER_SECRET}

  # Yahoo provider
//  yahoo.providerURL="https://me.yahoo.com/"
//  yahoo.callbackURL="http://localhost:9000/authenticate/yahoo"
//  yahoo.axRequired={
//    "fullname": "http://axschema.org/namePerson",
//    "email": "http://axschema.org/contact/email",
//    "image": "http://axschema.org/media/image/default"
//  }
//  yahoo.realm="http://localhost:9000"
}