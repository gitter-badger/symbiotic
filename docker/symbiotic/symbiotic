#!/bin/bash

CURR_DIR=`pwd`

CMD=$1
FLAG=$2

function preClean() {
  echo "Removing old containers..."
  docker rm symbiotic_backend_1 symbiotic_frontend_1 symbiotic_gateway_1 symbiotic_postgres_1
  echo "Removing previously built image for client..."
  docker rmi registry.gitlab.com/kpmeen/symbiotic-client:latest
}

function server() {
  cd $CURR_DIR/../..
  echo "Building docker image for server..."
  sbt "project symbiotic-server" clean compile docker:publishLocal
  cd $CURR_DIR
}

function client() {
  cd $CURR_DIR/../../examples/symbiotic-client
  echo "Building docker image for client..."
  docker build -t registry.gitlab.com/kpmeen/symbiotic-client:latest .
  cd $CURR_DIR
}

function remDangling() {
  echo "Removing dangling temporary images..."
  docker images -q --filter "dangling=true" | xargs docker rmi
}

function start() {
  client
  remDangling
  echo "Starting docker-compose build..."
  docker-compose up -d --build --force-recreate --remove-orphans
}

function stop() {
  cd $CURR_DIR
  echo "Stopping services..."
  docker-compose stop
}

function clean() {
  stop
  preClean
  docker images -q --filter "dangling=true" | xargs docker rmi
}

if ([ "$CMD" = "start" ] && [ "$FLAG" = "--skipBuild" ]); then
  echo "Skipping full rebuild of docker images..."
  preClean
  start

elif [ "$CMD" = "start" ]; then
  stop
  preClean
  server
  start

elif [ "$CMD" = "stop" ]; then
  stop

elif [ "$CMD" = "clean" ]; then
  clean

else
  echo "Usage: $ symbiotic <start | stop | clean> [--skipBuild]"
fi