######################################################################
# Shippable build script for Symbiotic Server project                #
######################################################################
language: scala
scala:
  - 2.11.8

jdk:
  - openjdk8

env:
  - secure: 0IYvnxWq7oSfk0txYIjaS0o6UAEkNFvN3exs4a62eJ11WlzxtEdPl9aNWrSwztknVSKNLHG1OvlfNpth1VrsdUsTWgre3UqZnt2N03pFZpKM6+7U7qwo/VGJNk1FzTcwIpa+8ykYRCeZCpW6w3wg4bBFHqtl1snH9dSgQlN632wxXs8KeaWUUNArFFjdZlcQqJUgR7g62HpqsHZJJcCM+Xbi2D/Xw84lV0ZvB23mxFYSiM0CuLix7Uuv4j5wN0/6EnHpJ55URBKkev+hLlhKkc0mGOmCbaor5agYkrQIxKu0VhawF/owPj1klt3pS6LaQYzfXPLxkzE/B0d4zfCkxA==

build:
  pre_ci_boot:
    # Using a docker image with latest scala and SBT and some dependencies
    # pre-loaded to avoid downloading the internet.
    image_name: kpmeen/docker-symbiotic-build
    image_tag: latest
    pull: true
    options: "-e HOME=/root"

  ci:
    # Start the MongoDB server as a replica set
    - if [ -d "dbfiles" ]; then rm -rf dbfiles; fi; mkdir dbfiles;
    - mongod --smallfiles --replSet symbiotic-shippable --storageEngine wiredTiger --dbpath dbfiles &
    - sleep 10s
    - mongo --eval "printjson(rs.initiate())"
    # Execute CI script
    - ./shippable-ci.sh
    # Check if the scalariform modified any files during the build. If yes, fail the build.
    - git diff --exit-code || (echo "ERROR Scalariform check failed, see differences above."; false)

  post_ci:
    # Publish coverage report to shippable coverage tab.
    - mkdir -p shippable/codecoverage
    - mv server/target/scala-2.11/coverage-report/cobertura.xml $PWD/shippable/codecoverage/
