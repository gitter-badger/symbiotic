######################################################################
# Shippable build script for Symbiotic Server project                #
######################################################################
language: scala
scala:
  - 2.11.8

jdk:
  - openjdk8

env:
  - secure: YlE72vkyQrJGbEwc2CgMvaxzB37n9vOH0ByTkFd4G1+EaATzc20zWT7PczPzuOjy40PhGJWb56egKPWnMXPNPMma+Zb7I7ZI4E0fzuS61pN7rIoS2NLBxpxHIGoyoiLZ8xNg8DAuNCgi1eWJf/5fgNnJ4ZFatASOSNaydETXOB7lkOM3HKXSd/sacrj0oXb/2yVTNVxCzGmCaQriU0Tk5v1Sbq5mU3YrMHpUzqGzws6VVjxNBl4Lqc79HxtCO0JuW2slSvtdFc21qr/AamDmQWaBeucKCemf3wjja07NZckRtW/W9+PQvt7Wj8vx/8Im0+hTi+xQuvM6jgmdBOfgNg==

build:
  pre_ci_boot:
    # Using a docker image with latest scala and SBT and some dependencies
    # pre-loaded to avoid downloading the internet.
    image_name: kpmeen/docker-symbiotic-build
    image_tag: latest
    pull: true
    options: "-e HOME=/root"

  ci:
    # Start the MongoDB server as a replica set
    - if [ -d "dbfiles" ]; then rm -rf dbfiles; fi; mkdir dbfiles;
    - mongod --smallfiles --replSet symbiotic-shippable --storageEngine wiredTiger --dbpath dbfiles &
    - sleep 10s
    - mongo --eval "printjson(rs.initiate())"
    # Execute CI script
    - ./shippable-ci.sh
    # Check if the scalariform modified any files during the build. If yes, fail the build.
    - git diff --exit-code || (echo "ERROR Scalariform check failed, see differences above."; false)

  post_ci:
    # Publish coverage report to shippable coverage tab.
    - mkdir -p shippable/codecoverage
    - mv server/target/scala-2.11/coverage-report/cobertura.xml $PWD/shippable/codecoverage/
