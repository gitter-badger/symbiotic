######################################################################
# Shippable build script for Symbiotic Server project                #
######################################################################
language: scala
scala:
  - 2.11.8

jdk:
  - openjdk8

env:
  - secure: grkoONOiOBKaGTiYBDUCof29qrV2bYx/UTCWqRsGalZcq3uQuCZuw/Be/MjhAOlMNDqaEaexayeXCemS9VyToHDaZf7k2uXmDLrrR02DTW5ym5cPci885EqbB19bCoVcfaeVrn24pHrp/6GSxbNED8uwHiryaTUAUS+zZr/tc0tAzOYk4F407J/y3TL9aPNUPq95r1yUp4tfgwg7Z0SE6UuiY/gglEcp+Ev/tqDA+6BDCwG0NiH45WyZvfBX3D6XVNO6+gGh4ygPapta8xumeA9lc/z6plztSEG+0SgT5rLbBa2sBGS9H/mE/mwQn3izmacXoQyUorGlZ1lqCSwHQg==

build:
  pre_ci_boot:
    # Using a docker image with latest scala and SBT and some dependencies
    # pre-loaded to avoid downloading the internet.
    image_name: kpmeen/docker-symbiotic-build
    image_tag: latest
    pull: true
    options: "-e HOME=/root"

  ci:
    # Start the MongoDB server as a replica set
    - if [ -d "dbfiles" ]; then rm -rf dbfiles; fi; mkdir dbfiles;
    - mongod --smallfiles --replSet symbiotic-shippable --storageEngine wiredTiger --dbpath dbfiles &
    - sleep 10s
    - mongo --eval "printjson(rs.initiate())"
    # Execute CI script
    - ./shippable-ci.sh
    # Check if the scalariform modified any files during the build. If yes, fail the build.
    - git diff --exit-code || (echo "ERROR Scalariform check failed, see differences above."; false)

  post_ci:
    # Publish coverage report to shippable coverage tab.
    - mkdir -p shippable/codecoverage
    - mv server/target/scala-2.11/coverage-report/cobertura.xml $PWD/shippable/codecoverage/
