silhouette {

  # JWT authenticator settings
  authenticator.headerName = "X-Auth-Token"
  authenticator.issuerClaim = "symbiotic"
  authenticator.encryptSubject = true
  authenticator.authenticatorExpiry = 12 hours
  authenticator.sharedSecret= "[changeme]"

  authenticator.authenticatorExpiry=30 days
  authenticator.authenticatorIdleTimeout=5 days

  authenticator.signer {
    # A unique encryption key
    key = "[changeme]"
    # Constant prepended and appended to the data before signing. When using one
    # key for multiple purposes, using a specific pepper reduces some risks
    # arising from this.
    pepper = "-mohiva-silhouette-signer-"
  }
  authenticator.crypter.key = "[changeme]" # A unique encryption key

  # CSRF state item handler settings
  csrfStateItemHandler.cookieName="OAuth2State"
  csrfStateItemHandler.cookiePath="/"
  csrfStateItemHandler.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  csrfStateItemHandler.httpOnlyCookie=true
  csrfStateItemHandler.expirationTime=5 minutes
  csrfStateItemHandler.signer.key = "[changeme]"

  socialStateHandler.signer {
    # A unique encryption key
    key = "[changeme]"
    # Constant prepended and appended to the data before signing. When using one
    # key for multiple purposes, using a specific pepper reduces some risks
    # arising from this.
    pepper = "-mohiva-silhouette-signer-"
  }

  # Google provider
  google.authorizationURL="https://accounts.google.com/o/oauth2/auth"
  google.accessTokenURL="https://accounts.google.com/o/oauth2/token"
  # The following is true for the redirectURL's:
  // use with the scala-js client and a correctly configured nginx.conf
  google.redirectURL="http://dev.scalytica.net/symbiotic/authCallback/google"
  // use when testing the server only functionality
  //google.redirectURL="http://dev.scalytica.net/symbiotic-server/authenticate/google"
  google.clientID=""
  google.clientID=${?GOOGLE_CLIENT_ID}
  google.clientSecret=""
  google.clientSecret=${?GOOGLE_CLIENT_SECRET}
  google.scope="profile email"

  # Github provider
  github.authorizationURL="https://github.com/login/oauth/authorize"
  github.accessTokenURL="https://github.com/login/oauth/access_token"
  github.redirectURL="http://dev.scalytica.net/symbiotic/authCallback/github"
  github.clientID=""
  github.clientID=${?GITHUB_CLIENT_ID}
  github.clientSecret=""
  github.clientSecret=${?GITHUB_CLIENT_SECRET}
  github.scope="user:email"
  github.emailsURL="https://api.github.com/user/emails?access_token=%s"

}