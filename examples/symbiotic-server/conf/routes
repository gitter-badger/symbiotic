# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Default Controller
GET           /info                                controllers.Application.serverInfo

# Login Controller
POST          /login                               controllers.LoginController.login
GET           /authenticate/:provider              controllers.LoginController.authenticate(provider: String)
GET           /logout                              controllers.LoginController.logout

# SignUp
POST          /register                            controllers.RegistrationController.register
GET           /validate/username/:uname            controllers.RegistrationController.validateUsername(uname: String)

# User
GET           /user/current                        controllers.UserController.current
GET           /user/:uid                           controllers.UserController.get(uid: String)
PUT           /user/:uid                           controllers.UserController.update(uid: String)
POST          /user/:uid/avatar                    controllers.UserController.uploadAvatar(uid: String)
GET           /user/:uid/avatar                    controllers.UserController.downloadAvatar(uid: String)

# Document Management
GET           /document/tree                       controllers.DocumentManagement.rootTree(includeFiles: Boolean ?= false)
GET           /document/tree/paths                 controllers.DocumentManagement.treePaths(path: Option[String])
GET           /document/tree/hierarchy             controllers.DocumentManagement.folderHierarchy(path: Option[String])
GET           /document/subtree                    controllers.DocumentManagement.subTree(path: String, includeFiles: Boolean ?= false)

POST          /document/upload                     controllers.DocumentManagement.uploadWithPath(path: String)
POST          /document/folder/:folderId/upload    controllers.DocumentManagement.uploadToFolder(folderId: String)

POST          /document/folder                     controllers.DocumentManagement.addFolderToPath(fullPath: String, createMissing: Boolean ?= true)
GET           /document/folder                     controllers.DocumentManagement.directDescendantsByPath(path: Option[String])
GET           /document/folder/:folderId           controllers.DocumentManagement.directDescendantsById(folderId: String)
POST          /document/folder/:folderId/:name     controllers.DocumentManagement.addFolderToParent(folderId: String, name: String)

GET           /document/:fileId                    controllers.DocumentManagement.fileById(fileId: String)
PUT           /document/:fileId/lock               controllers.DocumentManagement.lock(fileId: String)
PUT           /document/:fileId/unlock             controllers.DocumentManagement.unlock(fileId: String)
GET           /document/:fileId/islocked           controllers.DocumentManagement.isLocked(fileId: String)
PUT           /document/:fileId/move               controllers.DocumentManagement.moveFileTo(fileId: String, from: String, to: String)

# TODO: Add move folder operation when service is refactored and ready (see https://gitlab.com/scalytica/symbiotic-server/issues/15)


# Map static resources from the /public folder to the /assets URL path
#GET     /assets/*file               controllers.Assets.at(path="/public", file)
